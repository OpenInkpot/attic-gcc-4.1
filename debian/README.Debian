		The Debian GNU Compiler Collection setup
		========================================

Please see the README.Debian in /usr/share/doc/gcc, contained in the
gcc package for a description of the setup of the different compiler
versions.


Notes on GCC 3.4 in the sarge distribution
------------------------------------------

[package maintainers: when using GCC 3.4 for package building, please
 check that your packages still work on platforms with GCC changes
 specific for these platforms (hppa, m68k, mips, mipsel, sparc).       ]

GCC 3.4 is included in sarge as a newer compiler version, the system
compiler for sarge is GCC 3.3 (the transition to a newer system compiler
is a post sarge issue).  Due to some incompatibilities between
3.3 and 3.4 care should be taken, when some code built by both versions
is linked together (most likely linking against a shared library found
in Debian):

- C++ code compiled by g++-3.3 and g++-3.4 is not compatible.  Applications
  using C++ libraries have to make sure that these libraries are rebuilt.

- On i386, the compiler is built as a biarch compiler (can generated code
  for amd64). To use it, call gcc-3.4 -m64. Packages containing the 64bit
  versions of libraries and library development files need to be installed
  separately (i.e. lib64gcc1, amd64-libs, ...).
  gcc-3.4 -m64 turns on the common subset for all x86-64 architectures,
  specifying -march=k8 turns on k8/opteron specific features, -march=nocona
  turns on some P4/64 Nocona specific features.

- On hppa and m68k the exception handling changed from SJLJ to Dwarf2 based
  exception handling. This affects C++ and code, which implements it's own
  handling. If a library or binary ends up linked against libgcc1 _and_
  libgcc2, something probably won't work.

- The implementation of the MIPS ABIs has changed. As a result, the code
  generated for certain MIPS targets will not be binary compatible with
  earlier releases. See http://gcc.gnu.org/gcc-3.4/mips-abi.html

- The implementation of the SPARC ABIs has changed. As a result, the code
  generated will not be binary compatible with earlier releases in certain
  cases. See http://gcc.gnu.org/gcc-3.4/sparc-abi.html

Maintainers of these packages
-----------------------------

Matthias Klose <doko@debian.org>
Ray Dassen <jdassen@debian.org>
Jeff Bailey <jbailey@nisa.net>			(hurd-i386)
Joel Baker <fenton@debian.org>			(netbsd-i386)
Philip Blundell <pb@debian.org>			(arm-linux)
Ben Collins <bcollins@debian.org>		(sparc-linux)
Randolph Chung <tausq@debian.org>		(ia64-linux)
Falk Hueffner <falk@debian.org>			(alpha-linux)
Dan Jacobowitz <dan@debian.org>			(powerpc-linux)
Thiemo Seufer <ica2_ts@csv.ica.uni-stuttgart.de>(mips*-linux)
Ryan Murray <rmurray@cyberhqz.com>		(mips*-linux)
Matt Taggart <taggart@carmen.fc.hp.com>		(hppa-linux)
Gerhard Tonn <GerhardTonn@swol.de>		(s390-linux)
Roman Zippel <zippel@linux-m68k.org>		(m68k-linux)
Ludovic Brenta <ludovic.brenta@insalien.org>	(gnat)

===============================================================================

Patches that Slind applied in this version:

svn-updates:
  SVN updates from the 4.1 branch upto 20070306.

gcc-version:
  Add package identification to the gcc version string

gcc-textdomain:
  Set gettext's domain and textdomain to the versioned package name.

gcc-driver-extra-langs:
  Add options and specs for languages that are not built from a source
  (but built from separate sources).

gcc-long-double:
  Add --with{,out}-long-double-128 configure option.
  Taken from http://gcc.gnu.org/bugzilla/show_bug.cgi?id=25864#c14

libstdc++-long-double:
  PR target/25864, libstdc++-v3 parts.
  Taken from http://gcc.gnu.org/bugzilla/show_bug.cgi?id=25864#c13

libstdc++-pic:
  Build and install libstdc++_pic.a library.

libstdc++-doclink:
  adjust hrefs to point to the local documentation

gccbug:
  Use sensible-editor instead of vi as fallback editor

gccbug-posix:
  Make gccbug POSIX compliant (patch by David Weinehall)
  http://www.opengroup.org/onlinepubs/009695399/utilities/test.html

boehm-gc-backport:
  gcc/java / libjava backport / classpath-0.92

boehm-gc-nocheck:
  Disable running the boehm-gc testsuite. Hangs the buildd at least on hppa.

fastjar-version:
  Append GCC version to the fastjar version string.

fastjar-doc:
  fastjar.texi: Directly define the gcctabopt and gccoptlist macros.

libstdc++-doxygen:
  libstdc++ doxygen docs: Set SHORT_NAMES to YES

gcc-expandv:
  * gcc.c (main): Call expandargv.

libffi-configure:
  Add --enable-libffi option to toplevel configure script

libffi-backport:
  libffi backport

libffi-backport2:
  Add missing bits for the libffi backport from the trunk
  - parisc chunks
  - missing testcases in testsuite/libffi.call

alpha-no-ev4-directive:

arm-libffi:
  Add closure support to libffi for arm

note-gnu-stack:
  Add .note.GNU-stack sections for gcc's crt files, libffi and boehm-gc
  Taken from FC.

arm-gij:
  Enable gij interpreter on arm

hppa-cbranch:
  Fix for PR target/26743 (hppa)
  Backport from gcc trunk 2006-04-12 by tausq@debian.org

hppa-cbranch2:
  Fix for PR target/26743 (hppa)
  Backport from gcc trunk 2006-04-12 by tausq@debian.org

m68k-fjump:
  gcc/config/m68k/m68k.md:
  always use as fjcc pseudo op, we rely heavily on as 
  to generate the right size for the jump instructions
  fixes #359281

m68k-gc:
  boehm-gc:
  the thread suspend handler has to save all registers
  reenable MPROTECT_VDB, it should work, otherwise it's probably a kernel bug
  change STACKBOTTOM to LINUX_STACKBOTTOM so it works with 2.6 kernel

m68k-save_pic:
  gcc/config/m68k/m68k.c:
  correctly save the pic register, when not done by reload()
  (fixes _Unwind_RaiseException and thus exception handling)
  fixes 345574

m68k-libffi2:
  add closure support to libffi for m68k

m68k-dwarf:
  correct the dwarf frame information, but preserve compatibility

m68k-split_shift:
  use correct predicates for long long shifts and use more splits
  fixes 381572

m68k-prevent-qipush:
  prevent combine from creating a byte push on the stack (invalid on m68k)

m68k-jumptable:
  Don't force byte offset when accessing the jumptable, gas can
  generate the correct offset size instead.

m68k-peephole:
  Convert some text peepholes to rtl peepholes, so the correct
  DWARF2 information can be generated for stack manipulations.
  (Keep a few peepholes temporarily disabled.)

m68k-return:
  don't use single return if fp register have to be restored
  fixes 386864

m68k-sig-unwind:
  add support for unwinding over signal frames

m68k-align-code:
  use "move.l %a4,%a4" to advance within code.

m68k-align-stack:
  try to keep the stack word aligned

m68k-dwarf3:
  emit correct dwarf info for cfa offset and register with -fomit-frame-pointer

m68k-fpcompare:
  bring fp compare early to its desired form to relieve reload,
  allow any fp constant during and after reload (even special constants)
  in case reload can't find a free register for them.

m68k-secondary-addr-reload:
  add secondary reloads to allow reload to get byte values into addr regs

m68k-notice-move:
  don't set cc_status for fp move without fp register

m68k-symbolic-operand:
  better recognize symbolic operands in addresses

m68k-bitfield-offset:
  only use constant offset for register bitfields
  (combine expects shifts, but does a rotate)

pr25524:
  Backport PR libstdc++/25524 from the trunk

pr26885:
  Proposed patch for PR driver/26885

pr26864:
  Backport fix for PR libmudflap/26864 from the trunk.

pr27227:
  Revert the patch to fix PR c++/27227.

pr26208:
  PR other/26208

pr26208-r111674:
  PR other/26208, fix arm pasto

pr11953:
  PR libstdc++/11953, extended for all supported linux architectures

slind-hacks:
  fix prototype clash with linux-kernel-headers version 2.6.18 in
  psignal definition

gcc-dwarf2-h:
  gcc dwarf2.h header additions (r107384, r111620), taken from the trunk

gcc-unwind-r111705:
  gcc unwind r11705, taken from the trunk

gcc-unwind-r120406:
  gcc unwind r120406, taken from the trunk

pr9861-nojava:
  Non-java parts of PR java/9861 (java changes in gcj-ecj-generics.tar.bz2).

cross-include:
  Set cross include path to .../include, not .../sys-include
  This should be a fix for famous limits.h issue

cross-fixes:
  Fix the linker error when creating an xcc for ia64

link-libs:

reporting:
  Add Debian URL for bug reporting instructions.

reporting:
  Add Debian URL for bug reporting instructions.

gcc-ice-hack:
  2004-01-23  Jakub Jelinek  <jakub@redhat.com>
  
  	* system.h (ICE_EXIT_CODE): Define.
  	* gcc.c (execute): Don't free first string early, but at the end
  	of the function.  Call retry_ice if compiler exited with
  	ICE_EXIT_CODE.
  	(retry_ice): New function.
  	* diagnostic.c (diagnostic_count_diagnostic,
  	diagnostic_action_after_output, error_recursion): Exit with
  	ICE_EXIT_CODE instead of FATAL_EXIT_CODE.
