#! /bin/sh -e

# DP: 

dir=
if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
    dir="$3/"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch)
        patch $pdir -f --no-backup-if-mismatch -p0 < $0
	cd ${dir}libjava && autoconf
	cd - >/dev/null
	cd ${dir}libjava/classpath && autoconf
        ;;
    -unpatch)
        patch $pdir -f --no-backup-if-mismatch -R -p0 < $0
        ;;
    *)
        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
        exit 1
esac
exit 0

--- libjava/configure.ac.orig	2006-08-19 21:29:33.603803000 +0200
+++ libjava/configure.ac	2006-08-19 21:36:07.803803000 +0200
@@ -200,6 +200,23 @@
 
 for peer in $peerlibs ; do
   case $peer in
+    xlib-*|gtk-*|qt-*)
+      real=$(echo $peer | sed -e 's/^\(.*\)-.*$/\1/')
+      condition=$(echo $peer | sed -e 's/^.*-\(.*\)$/\1/')
+      if test -z "${with_multisubdir}" && test "$condition" = default; then
+	new_peerlibs="$new_peerlibs $real"
+      elif test "${with_multisubdir}" && test "$condition" = "${with_multisubdir}"; then
+	new_peerlibs="$new_peerlibs $real"
+      fi
+      ;;
+    *)
+      new_peerlibs="$new_peerlibs $peer"
+      ;;
+  esac
+done
+
+for peer in $new_peerlibs ; do
+  case $peer in
     xlib)
       if test "$no_x" = yes; then
         echo "*** xlib peers requested but no X library available" 1>&2
@@ -290,13 +307,21 @@
 else
   # We are being configured with a native or crossed-native compiler
   if test -x "${built_gcc_dir}/gcj${ac_exeext}"; then
-     if test x"$build" = x"$host"; then
+     if test x"$with_multisubdir" = x32; then
+        which_gcj=built
+     elif test x"$with_multisubdir" = x64; then
+        which_gcj=built
+     elif test x"$build" = x"$host"; then
         # True native build (host=target and host=build)
         which_gcj=built
      else
         # Crossed-native build (host=target and host!=build)
         which_gcj=cross
      fi
+     # Debian ...
+     case "$with_multisubdir" in
+       *-linux-gnu) which_gcj=built;;
+     esac
   else
      which_gcj=path
   fi
@@ -335,7 +360,12 @@
 ac_configure_args="$ac_configure_args --enable-tool-wrappers"
 ac_configure_args="$ac_configure_args --disable-load-library"
 ac_configure_args="$ac_configure_args --${LIBGCJDEBUG}-debug"
-ac_configure_args="$ac_configure_args --enable-default-toolkit=$TOOLKIT"
+if test -n "$with_multisubdir"; then
+  ac_configure_args="$ac_configure_args --enable-default-toolkit=$TOOLKIT --disable-gconf-peer"
+  use_gtk_awt=no
+  use_qt_awt=no
+  plugin_enabled=no
+fi
 dir1=`cd $srcdir && pwd`
 dir2=`pwd`
 ac_configure_args="$ac_configure_args --with-vm-classes=$dir1:$dir2"
@@ -1157,9 +1187,12 @@
       AC_SUBST(LIBART_LIBS)
 
       # We require the XTest Extension to support java.awt.Robot.
-      AC_CHECK_LIB([Xtst], [XTestQueryExtension], [true],
+      if test -z "$with_multisubdir"; then
+	AC_CHECK_LIB([Xtst], [XTestQueryExtension], [true],
 		   [AC_MSG_ERROR([libXtst not found, required by java.awt.Robot])],
 		   [${X_LIBS}])
+      fi
+      # Debian: guaranteed by the libxtst-dev build dependency
    fi
 
    # On Solaris, and maybe other architectures, the Boehm collector
